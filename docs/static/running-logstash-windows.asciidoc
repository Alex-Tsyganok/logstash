[[running-logstash-windows]]
== Running Logstash on Windows (Work in progress)
Before reading this section, see <<installing-logstash>> for basic installation instructions to get you started.

Logstash is not started automatically after installation. How to start and stop Logstash on Windows depends on whether you want to run it as a service (with https://nssm.cc/[NSSM]), schedule it as a task, or run it manually.

[[running-logstash-windows-validation]]
=== Validating JVM Pre-Requisites on Windows
After installing a https://www.elastic.co/support/matrix#matrix_jvm[supported JVM], open an Administrative https://docs.microsoft.com/en-us/powershell/[PowerShell] session and run the following commands to verify `JAVA_HOME` is set and the Java version:

==== `Write-Host $env:JAVA_HOME`
** The output should be pointed to where the JVM software is located, for example:
```
PS C:\> Write-Host $env:JAVA_HOME
C:\Program Files\Java\jdk-11.0.3
```

** If `JAVA_HOME` is not set, perform one of the following:
1. Set using the GUI:
*** Right click My Computer and select Properties.
*** On the Advanced tab, select Environment Variables
*** In the Environmental Variables window edit JAVA_HOME to point to where the JDK software is located, for example: `C:\Program Files\Java\jdk-11.0.3`
2. Set using PowerShell:
*** In an Administrative PowerShell session, execute the following `https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/setx[SETX]` commands:
*** `SETX /m JAVA_HOME "C:\Program Files\Java\jdk-11.0.3"`
*** `SETX /m PATH "$ENV:PATH;C:\Program Files\Java\jdk-11.0.3\bin;"`
*** Exit PowerShell, then open a new PowerShell session and run `Write-Host $env:JAVA_HOME` to verify

==== `Java -version`
** This command produces output similar to the following:
```
PS C:\> Java -version
java version "11.0.3" 2019-04-16 LTS
Java(TM) SE Runtime Environment 18.9 (build 11.0.3+12-LTS)
Java HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.3+12-LTS, mixed mode)
```

NOTE: As of the publication of this document, please review this https://github.com/elastic/logstash/issues/10496[known issue that impacts Java 11] before proceeding.

Once you have validated JVM pre-requisites, you may proceed.  

NOTE: For the examples listed below, we are running Windows Server 2016, Java 11.0.3, have extracted the https://www.elastic.co/downloads/logstash[Logstash ZIP package] to `C:\logstash-7.1.0\`, and using the example `syslog.conf` file shown below (stored in `C:\logstash-7.1.0\config\`).

[[running-logstash-windows-nssm]]
=== Running Logstash as a service with NSSM (Work in progress)
Install https://nssm.cc/[NSSM], 

[[running-logstash-windows-scheduledtask]]
=== Running Logstash with Task Scheduler (Work in progress)
Open the Windows https://docs.microsoft.com/en-us/windows/desktop/taskschd/task-scheduler-start-page[Task Scheduler],

[[running-logstash-windows-manual]]
=== Running Logstash manually with PowerShell (Work in progress)
Open an Administrative https://docs.microsoft.com/en-us/powershell/[PowerShell] session, then run the following commands:
```
PS C:\Windows\system32> cd C:\logstash-7.1.0\
PS C:\logstash-7.1.0> .\bin\logstash.bat -f .\config\syslog.conf
```

Wait for the following messages to appear, to confirm Logstash has started successfully:
```
[logstash.runner          ] Starting Logstash {"logstash.version"=>"7.1.0"}
[logstash.inputs.udp      ] Starting UDP listener {:address=>"0.0.0.0:514"}
[logstash.agent           ] Successfully started Logstash API endpoint {:port=>9600}
```
NOTE: Logstash can be stopped by sending the `ctrl` + `c` keys in the PowerShell console.

[[running-logstash-windows-example]]
=== Example Logstash Configuration
We will configure Logstash to listen for syslog messages over port 514 with this configuration (file name is `syslog.conf`):
```
# Sample Logstash configuration for receiving
# UDP syslog messages over port 514

input {
  udp {
    port => 514
    type => "syslog"
  }
}

output {
  stdout { }
}
```
